with nu_inscritos_desistentes as (
  select 
    count(nu_inscricao) quantidade
  from `pelagic-bastion-352202.dados_enem2019.MICRODADOS_ENEM_2019` me
  where me.tp_presenca_cn = 0 and
        me.tp_presenca_ch = 0 and
        me.tp_presenca_lc = 0 and
        me.tp_presenca_mt = 0 

), nu_inscritos_aplicantes as (
  select 
    count(nu_inscricao) quantidade
  from dados_enem2019.MICRODADOS_ENEM_2019 me
  where me.tp_presenca_cn <> 0 or
        me.tp_presenca_ch <> 0 or
        me.tp_presenca_lc <> 0 or
        me.tp_presenca_mt <> 0 
      
), nu_inscritos_totais as (
  select
   count(nu_inscricao) quantidade
  from `pelagic-bastion-352202.dados_enem2019.MICRODADOS_ENEM_2019` me	  
)

select 
  mi.nu_inscricao, 
  mi.co_prova_cn nota_cn,
  mi.co_prova_ch nota_ch,
  mi.co_prova_lc nota_lc,
  mi.co_prova_mt nota_mt,
  sum(
    ifnull(mi.CO_PROVA_CN,0) + 
    ifnull(mi.CO_PROVA_CH,0) + 
    ifnull(mi.CO_PROVA_LC,0) + 
    ifnull(mi.CO_PROVA_MT,0))/4 media_aluno,
  mi.nu_nota_redacao nota_redacao,
  mi.no_municipio_esc escola_do_aluno,
  mi.no_municipio_prova escola_da_prova,
  case(mi.tp_faixa_etaria)
      WHEN 1 THEN cast('Menor de 17 anos' as string)
      WHEN 2 THEN cast('17 anos' as string)
      WHEN 3 THEN cast('18 anos' as string)
      WHEN 4 THEN cast('19 anos' as string)
      WHEN 5 THEN cast('20 anos' as string)
      WHEN 6 THEN cast('21 anos' as string)
      WHEN 7 THEN cast('22 anos' as string)
      WHEN 8 THEN cast('23 anos' as string)
      WHEN 9 THEN cast('24 anos' as string)
      WHEN 10 THEN cast('25 anos' as string)
      WHEN 11 THEN cast('Entre 26 e 30 anos' as string)
      WHEN 12 THEN cast('Entre 31 e 35 anos' as string)
      WHEN 13 THEN cast('Entre 36 e 40 anos' as string)
      WHEN 14 THEN cast('Entre 41 e 45 anos' as string)
      WHEN 15 THEN cast('Entre 46 e 50 anos' as string)
      WHEN 16 THEN cast('Entre 51 e 55 anos' as string)
      WHEN 17 THEN cast('Entre 56 e 60 anos' as string)
      WHEN 18 THEN cast('Entre 61 e 65 anos' as string)
      WHEN 19 THEN cast('Entre 66 e 70 anos' as string)
      WHEN 20 THEN cast('Maior de 70 anos' as string)
      ELSE 'null' END AS faixa_etaria,
  case(mi.tp_dependencia_adm_esc)
      WHEN 1 THEN cast('Federal' as string)
      WHEN 2 THEN cast('Estadual' as string)
      WHEN 3 THEN cast('Municipal' as string)
      WHEN 4 THEN cast('Privada' as string)
      ELSE 'null' END AS tipo_escola,
  mi.tp_sexo genero,
  case(mi.tp_cor_raca)
        WHEN 0 THEN cast('Não declarado' as string)
        WHEN 1 THEN cast('Branca' as string)
        WHEN 2 THEN cast('Preta' as string)
        WHEN 3 THEN cast('Parda' as string)
        WHEN 4 THEN cast('Amarela' as string)
        WHEN 5 THEN cast('Indígena' as string)
        ELSE 'null' END AS cor_raca,
  mi.sg_uf_esc sigla_estado,
  case(mi.sg_uf_esc)
      WHEN 'AC' THEN 'Acre, Brasil'
      WHEN 'AL' THEN 'Alagoas, Brasil'
      WHEN 'AP' THEN 'Amapá, Brasil'
      WHEN 'AM' THEN 'Amazonas, Brasil'
      WHEN 'BA' THEN 'Bahia, Brasil'
      WHEN 'CE' THEN 'Ceará, Brasil'
      WHEN 'DF' THEN 'Distrito Federal, Brasil'
      WHEN 'ES' THEN 'Espírito Santo, Brasil'
      WHEN 'GO' THEN 'Goiás, Brasil'
      WHEN 'MA' THEN 'Maranhão, Brasil'
      WHEN 'MT' THEN 'Mato Grosso, Brasil'
      WHEN 'MS' THEN 'Mato Grosso do Sul, Brasil'
      WHEN 'MG' THEN 'Minas Gerais, Brasil'
      WHEN 'PA' THEN 'Pará, Brasil'
      WHEN 'PB' THEN 'Paraíba, Brasil'
      WHEN 'PR' THEN 'Paraná, Brasil'
      WHEN 'PE' THEN 'Pernambuca, Brasil'
      WHEN 'PI' THEN 'Piauí, Brasil'
      WHEN 'RJ' THEN 'Rio de Janeiro, Brasil'
      WHEN 'RN' THEN 'Rio Grande do Norte, Brasil'
      WHEN 'RS' THEN 'Rio Grande do Sul, Brasil'
      WHEN 'RO' THEN 'Rondônia, Brasil'
      WHEN 'RR' THEN 'Roraima, Brasil'
      WHEN 'SC' THEN 'Santa Catarina, Brasil'
      WHEN 'SP' THEN 'São Paulo, Brasil'
      WHEN 'SE' THEN 'Sergipe, Brasil'
      WHEN 'TO' THEN 'Tocantins, Brasil'
      ELSE 'null' END AS Estado,
  case(mi.tp_estado_civil)
      WHEN 0 THEN cast('Não' as string)
      WHEN 1 THEN cast('Solteiro(a)' as string)
      WHEN 2 THEN cast('Casado(a)/Mora com companheiro(a)' as string)
      WHEN 3 THEN cast('Divorciado(a)/Desquitado(a)/Separado(a)' as string)
      WHEN 4 THEN cast('Viúvo(a)' as string)
      ELSE 'null' END AS estado_civil,
  ti.quantidade quantidade_total,
  id.quantidade quantidade_desistentes,
  ia.quantidade quantidade_aplicantes,
  case(mi.q022)
      WHEN 'A' THEN cast('Não' as string)
      WHEN 'B' THEN cast('Sim' as string)
      WHEN 'C' THEN cast('Sim' as string)
      WHEN 'D' THEN cast('Sim' as string)
      WHEN 'E' THEN cast('Sim' as string)
      ELSE 'null' END AS metrica_celular,
  case(mi.q024)
      WHEN 'A' THEN cast('Não' as string)
      WHEN 'B' THEN cast('Sim' as string)
      WHEN 'C' THEN cast('Sim' as string)
      WHEN 'D' THEN cast('Sim' as string)
      WHEN 'E' THEN cast('Sim' as string)
      ELSE 'null' END AS metrica_computador,
  case(mi.q025)
      WHEN 'A' THEN cast('Não' as string)
      WHEN 'B' THEN cast('Sim' as string)
      ELSE 'null' END AS metrica_internet,
  case(mi.tp_localizacao_esc)
      WHEN 1 THEN cast('Urbana' as string)
      WHEN 2 THEN cast('Rural' as string)
      ELSE 'null' END AS escola_r_u,
  case(mi.q006)
      WHEN 'A' THEN 'Nenhuma renda'
      WHEN 'B' THEN 'Até R$ 998,00'
      WHEN 'C' THEN 'De R$ 998,01 até R$ 1.497,00'
      WHEN 'D' THEN 'De R$ 1.497,01 até R$ 1.996,00'
      WHEN 'E' THEN 'De R$ 1.996,01 até R$ 2.495,00'
      WHEN 'F' THEN 'De R$ 2.495,01 até R$ 2.994,00'
      WHEN 'G' THEN 'De R$ 2.994,01 até R$ 3.992,00'
      WHEN 'H' THEN 'De R$ 3.992,01 até R$ 4.990,00'
      WHEN 'I' THEN 'De R$ 4.990,01 até R$ 5.988,00'
      WHEN 'J' THEN 'De R$ 5.988,01 até R$ 6.986,00'
      WHEN 'K' THEN 'De R$ 6.986,01 até R$ 7.984,00'
      WHEN 'L' THEN 'De R$ 7.984,01 até R$ 8.982,00'
      WHEN 'M' THEN 'De R$ 8.982,01 até R$ 9.980,00'
      WHEN 'N' THEN 'De R$ 9.980,01 até R$ 11.976,00'
      WHEN 'O' THEN 'De R$ 11.976,01 até R$ 14.970,00'
      WHEN 'P' THEN 'De R$ 14.970,01 até R$ 19.960,00'
      WHEN 'Q' THEN 'Mais de R$ 19.960,00'
      ELSE 'null' END AS renda_mensal,
  case(mi.tp_lingua)
      WHEN 0 THEN cast('Inglês' as string)
      WHEN 1 THEN cast('Espanhol' as string)
      ELSE 'null' END AS lingua_estrangeira,
  mi.tp_presenca_ch presenca_ch,
  mi.tp_presenca_cn presenca_cn,
  mi.tp_presenca_lc presenca_lc,
  mi.tp_presenca_mt presenca_mt,


from `pelagic-bastion-352202.dados_enem2019.MICRODADOS_ENEM_2019` mi,
      nu_inscritos_totais ti,
      nu_inscritos_desistentes id,
      nu_inscritos_aplicantes ia
group by mi.nu_inscricao, mi.co_prova_cn, mi.co_prova_ch, mi.co_prova_lc, mi.co_prova_mt, mi.no_municipio_esc, 
         mi.no_municipio_prova, mi.tp_faixa_etaria, mi.nu_nota_redacao,
         mi.tp_dependencia_adm_esc, mi.tp_sexo, mi.tp_cor_raca, mi.sg_uf_esc, mi.tp_estado_civil,
	       ti.quantidade, id.quantidade, ia.quantidade,
         mi.q022, mi.q024, mi.q025, mi.tp_localizacao_esc, mi.q006, mi.tp_lingua,
         mi.tp_presenca_ch, mi.tp_presenca_cn ,mi.tp_presenca_lc,mi.tp_presenca_mt